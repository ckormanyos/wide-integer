name: wide_integer
on:
  push:
    branches:
      - '**'
  pull_request:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
jobs:
  gcc-clang-native:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-native
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-native-limb_type_uint64_t:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ gnu++11, gnu++14, gnu++17, gnu++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-native-limb_type_uint64_t
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -DWIDE_INTEGER_HAS_MUL_8_BY_8_UNROLL -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-native-x86:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt --reinstall install gcc-multilib g++-multilib
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-native-x86
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m32 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-10_up:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++20 ]
        compiler: [ g++-10, g++-11, clang++-10, clang++-11, clang++-12 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-10 g++-10 gcc-11 g++-11 clang-10 clang-11 clang-12
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-10_up
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-9:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++-9, clang++-9 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install g++-9 clang-9
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-9
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-8_down:
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14 ]
        compiler: [ g++-6, g++-7, g++-8, clang++-6.0, clang++-7, clang++-8 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install g++-6 g++-7 g++-8 clang-6.0 clang-7 clang-8
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-8_down
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-native-asan:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-native-asan
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -fsanitize=address -fsanitize=leak -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-native-ubsan:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-native-ubsan
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -finline-functions -fsanitize=shift -fsanitize=shift-exponent -fsanitize=shift-base -fsanitize=integer-divide-by-zero -fsanitize=null -fsanitize=signed-integer-overflow -fsanitize=bounds -fsanitize=alignment -fsanitize=float-divide-by-zero -fsanitize=float-cast-overflow -fsanitize=enum -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-native-ubsan-limb_type_uint64_t:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ gnu++11, gnu++14, gnu++17, gnu++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-native-ubsan-limb_type_uint64_t
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -finline-functions -fsanitize=shift -fsanitize=shift-exponent -fsanitize=shift-base -fsanitize=integer-divide-by-zero -fsanitize=null -fsanitize=signed-integer-overflow -fsanitize=bounds -fsanitize=alignment -fsanitize=float-divide-by-zero -fsanitize=float-cast-overflow -fsanitize=enum -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-native-tsan:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-native-tsan
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -fsanitize=thread -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  apple-gcc-clang-native:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.sh
          ./b2 headers
      - name: apple-gcc-clang-native
        run: |
          grep BOOST_VERSION ../boost-root/boost/version.hpp
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Werror -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  msvc-release-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.bat
          ./b2 headers
      - uses: actions/checkout@v1
      - uses: ilammy/msvc-dev-cmd@v1
      - name: msvc-release-x64
        shell: cmd
        working-directory: ./
        run: |
          set INCLUDE=%cd%;%cd%\..\boost-root;%INCLUDE%
          MSBuild -m wide_integer.sln -p:useenv=true -p:Configuration=Release -p:Platform=x64 /t:Rebuild
          dir %cd%\x64\Release\wide_integer.exe
          %cd%\x64\Release\wide_integer.exe
  mingw-winhost-x64:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [ g++ ]
        standard: [ c++11, c++14, c++17, c++2a ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/array
          git submodule update --init libs/assert
          git submodule update --init libs/concept_check
          git submodule update --init libs/container
          git submodule update --init libs/config
          git submodule update --init libs/core
          git submodule update --init libs/detail
          git submodule update --init libs/exception
          git submodule update --init libs/functional
          git submodule update --init libs/integer
          git submodule update --init libs/io
          git submodule update --init libs/iterator
          git submodule update --init libs/lexical_cast
          git submodule update --init libs/math
          git submodule update --init libs/move
          git submodule update --init libs/mpl
          git submodule update --init libs/multiprecision
          git submodule update --init libs/numeric/conversion
          git submodule update --init libs/predef
          git submodule update --init libs/preprocessor
          git submodule update --init libs/random
          git submodule update --init libs/range
          git submodule update --init libs/rational
          git submodule update --init libs/static_assert
          git submodule update --init libs/throw_exception
          git submodule update --init libs/type_traits
          git submodule update --init libs/utility
          ./bootstrap.bat
          ./b2 headers
      - name: mingw-winhost-x64
        shell: cmd
        working-directory: ./
        run: |
          echo compile ./wide_integer.exe
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Wall -Wextra -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DWIDE_INTEGER_HAS_LIMB_TYPE_UINT64 -I. -I../boost-root -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_float_convert.cpp test/test_uintwide_t_int_convert.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example000_numeric_limits.cpp examples/example000a_builtin_convert.cpp examples/example001_mul_div.cpp examples/example001a_div_mod.cpp examples/example002_shl_shr.cpp examples/example003_sqrt.cpp examples/example003a_cbrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example005a_pow_factors_of_p99.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example009a_timed_mul_4_by_4.cpp examples/example009b_timed_mul_8_by_8.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp examples/example012_rsa_crypto.cpp -o wide_integer.exe
          dir %cd%\wide_integer.exe
          %cd%\wide_integer.exe

  cmake:
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-20.04, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: clone-boost-develop
        working-directory: ${{runner.workspace}}
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ${{runner.workspace}}/boost-root

      - name: clone-submods
        working-directory: ${{runner.workspace}}/boost-root
        run: |
          git submodule update --init tools libs/algorithm libs/align libs/any libs/array libs/assert libs/atomic libs/bind libs/chrono libs/circular_buffer libs/compute libs/concept_check libs/config libs/container libs/container_hash libs/conversion libs/core libs/date_time libs/detail libs/dynamic_bitset libs/endian libs/exception libs/foreach libs/format libs/function libs/function_types libs/fusion libs/hana libs/headers libs/integer libs/intrusive libs/io libs/iterator libs/lambda libs/lexical_cast libs/logic libs/math libs/move libs/mp11 libs/mpl libs/multi_index libs/multiprecision libs/numeric/conversion libs/numeric/interval libs/optional libs/phoenix libs/pool libs/predef libs/preprocessor libs/property_tree libs/proto libs/random libs/range libs/ratio libs/rational libs/regex libs/serialization libs/smart_ptr libs/spirit libs/static_assert libs/system libs/thread libs/throw_exception libs/tokenizer libs/tti libs/tuple libs/type_index libs/type_traits libs/typeof libs/unordered libs/utility libs/variant

      - name: bootstrap-boost-ubuntu
        if: ( matrix.os == 'ubuntu-20.04' )
        working-directory: ${{runner.workspace}}/boost-root
        run: |
          ./bootstrap.sh
          ./b2 headers

      - name: bootstrap-boost-windows
        if: ( matrix.os == 'windows-latest' )
        working-directory: ${{runner.workspace}}/boost-root
        run: |
          ./bootstrap.bat
          ./b2 headers

      - name: create build directory
        run: mkdir ${{runner.workspace}}/build

      - name: build-ubuntu
        if: ( matrix.os == 'ubuntu-20.04' )
        working-directory: ${{runner.workspace}}/build
        run: |
          export BOOST_ROOT=${{runner.workspace}}/boost-root
          cmake \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_CXX_COMPILER=g++-10 \
              -DCMAKE_CXX_STANDARD=20 \
              -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/.github/toolchains/gcc.cmake \
              $GITHUB_WORKSPACE
          cmake --build .

      - name: build-windows
        if: ( matrix.os == 'windows-latest' )
        shell: cmd
        working-directory: ${{runner.workspace}}/build
        run: |
          set BOOST_ROOT=${{runner.workspace}}\boost-root
          cmake -DCMAKE_CXX_FLAGS="/W4 /WX /EHsc" -DCMAKE_CXX_STANDARD=20 ..\wide-integer
          cmake --build . --config Release

      - name: test
        working-directory: ${{runner.workspace}}/build
        run: ctest --verbose --output-on-failure
