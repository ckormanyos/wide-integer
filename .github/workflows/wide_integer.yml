name: wide_integer
on:
  push:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
jobs:
  gcc-clang-native:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-libboost-dev
        run: sudo apt install libboost-dev
      - name: update-libboost-all-dev
        run: sudo apt install libboost-all-dev
      - name: gcc-clang-native
        run: |
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Wall -Wextra -std=${{ matrix.standard }} -I. -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example001a_div_mod.cpp examples/example001_mul_div.cpp examples/example002_shl_shr.cpp examples/example003a_cbrt.cpp examples/example003_sqrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-10:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++20 ]
        compiler: [ g++-10, clang++-10 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-10 clang-10
      - name: update-libboost-dev
        run: sudo apt install libboost-dev
      - name: update-libboost-all-dev
        run: sudo apt install libboost-all-dev
      - name: gcc-clang-10
        run: |
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Wall -Wextra -std=${{ matrix.standard }} -I. -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example001a_div_mod.cpp examples/example001_mul_div.cpp examples/example002_shl_shr.cpp examples/example003a_cbrt.cpp examples/example003_sqrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-native-asan:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-libboost-dev
        run: sudo apt install libboost-dev
      - name: update-libboost-all-dev
        run: sudo apt install libboost-all-dev
      - name: gcc-clang-native-asan
        run: |
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -fsanitize=address -fsanitize=leak -fsanitize=bounds -m64 -O3 -Wall -Wextra -std=${{ matrix.standard }} -I. -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example001a_div_mod.cpp examples/example001_mul_div.cpp examples/example002_shl_shr.cpp examples/example003a_cbrt.cpp examples/example003_sqrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  gcc-clang-native-tsan:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-libboost-dev
        run: sudo apt install libboost-dev
      - name: update-libboost-all-dev
        run: sudo apt install libboost-all-dev
      - name: gcc-clang-native-tsan
        run: |
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -fsanitize=thread -m64 -O3 -Wall -Wextra -std=${{ matrix.standard }} -I. -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example001a_div_mod.cpp examples/example001_mul_div.cpp examples/example002_shl_shr.cpp examples/example003a_cbrt.cpp examples/example003_sqrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  apple-gcc-clang-native:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: install gcc
        run: brew install gcc
      - name: install boost
        run: brew install boost
      - name: apple-gcc-clang-native
        run: |
          echo "compile ./wide_integer.exe"
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -m64 -O3 -Wall -Wextra -std=${{ matrix.standard }} -I. -pthread -lpthread  test/test.cpp test/test_uintwide_t_boost_backend.cpp test/test_uintwide_t_edge_cases.cpp test/test_uintwide_t_examples.cpp test/test_uintwide_t_n_base.cpp test/test_uintwide_t_n_binary_ops_base.cpp test/test_uintwide_t_spot_values.cpp examples/example001a_div_mod.cpp examples/example001_mul_div.cpp examples/example002_shl_shr.cpp examples/example003a_cbrt.cpp examples/example003_sqrt.cpp examples/example004_rootk_pow.cpp examples/example005_powm.cpp examples/example006_gcd.cpp examples/example007_random_generator.cpp examples/example008_miller_rabin_prime.cpp examples/example008a_miller_rabin_prime.cpp examples/example009_timed_mul.cpp examples/example010_uint48_t.cpp examples/example011_uint24_t.cpp -o wide_integer.exe
          echo "ls ./wide_integer.exe"
          ls -la ./wide_integer.exe
          ./wide_integer.exe
  msvc-release-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: ilammy/msvc-dev-cmd@v1
      - name: msvc-release-x64
        shell: cmd
        working-directory: ./
        run: |
          set INCLUDE=%cd%;%BOOST_ROOT_1_72_0%\include\boost-1_72;%INCLUDE%
          MSBuild -m wide_integer.sln -p:useenv=true -p:Configuration=Release -p:Platform=x64 /t:Rebuild
          dir %cd%\x64\Release\wide_integer.exe
          %cd%\x64\Release\wide_integer.exe

